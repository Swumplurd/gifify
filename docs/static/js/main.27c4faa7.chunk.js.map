{"version":3,"sources":["components/AddCategory/AddCategory.js","helpers/getGifs.js","components/GridItem/GridItem.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","components/Gifify/Gifify.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","htlmfor","type","value","onChange","target","id","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","gif","title","images","downsized_medium","date","import_datetime","GridItem","src","alt","href","rel","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","item","Gifify","categories","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.27c4faa7.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 0) {            \r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n                <label htlmfor=\"categorias\" className=\"form-label\">Buscar Categorias</label>\r\n                <input type=\"text\" value={inputValue} onChange={handleInputChange} className=\"form-control shadow\" id=\"categorias\" aria-describedby=\"categoriasHelp\"/>\r\n                <div id=\"categoriasHelp\" className=\"form-text\">Ingresa el nombre de una nueva categoria...</div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=SSU4rxb9RPFUuGbxhXDXrS8VAcPmrDo4&limit=6`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map((gif) => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url,\r\n            date: gif.import_datetime\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","export const GridItem = ({title, url, date}) => {\r\n    return (\r\n        <div className=\"col\">\r\n            <div className=\"card h-100\">\r\n                <img src={url} className=\"card-img-top\" alt={url}/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{title || 'Sin titulo'}</h5>\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-secondary\">Ver imagen</a>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <small className=\"text-muted\">Fecha y hora de subida: {date}</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useFetchGifs } from \"../../hooks/useFetchGifs\";\r\nimport { GridItem } from \"../GridItem/GridItem\";\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:gif, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"text-center mt-5 text-uppercase\">{category}</h3>\r\n            {loading && <p className=\"text-center animate__heartBeat\">Cargando...</p>}\r\n            <div className=\"row row-cols-1 row-cols-md-3 g-4 animate__bounceIn\">\r\n                {\r\n                    gif.map(item => {\r\n                        return <GridItem key={item.id} {...item} />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n     const [state, setState] = useState({\r\n         data: [],\r\n         loading: true\r\n     });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then((gifs) => setState({\r\n                data: gifs,\r\n                loading: false\r\n            })\r\n        )\r\n    }, [category]);\r\n\r\n    return state\r\n}\r\n","import { useState } from 'react'\r\nimport { AddCategory } from '../AddCategory/AddCategory';\r\nimport { GifGrid } from '../GifGrid/GifGrid';\r\n\r\nexport const Gifify = () => {\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-5 my-4 bg-dark bg-gradient shadow-lg text-light rounded-3\">\r\n                <div className=\"container-fluid py-5\">\r\n                    <h1 className=\"display-5 fw-bold\">Gifify</h1>\r\n                    <p className=\"col-md-8 fs-4 d-none d-sm-block\">Generamos peticiones http a la API de GIPHY mediante el input situado debajo... para mas informacion acerca de la API dar click en el siguiente boton...</p>\r\n                    <a className=\"btn btn-primary btn-lg d-none d-sm-block\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://developers.giphy.com/\">API GIPHY</a>\r\n                </div>\r\n            </div>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                        return (\r\n                            <GifGrid key={category} category={category}/>\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Gifify } from './components/Gifify/Gifify';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport 'animate.css/animate.css';\n\nReactDOM.render(\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col\">\n        <Gifify />\n      </div>\n    </div>\n  </div>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}